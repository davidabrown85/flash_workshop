package classes.ui.timer{	import flash.utils.getTimer;	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.events.Event;	public class DigitalTimerCountdown extends MovieClip	{		private var start_time:int;		private var _finish_time:int;		private var time_taken:int;				private var pause_time:int;						public const TIMESUP:String = "timesup";		public function DigitalTimerCountdown()		{			//setup_timer( 10000 );			//start_timer();		}				public function setup_timer( finish_time:int ):void		{			_finish_time = finish_time;			time_txt.text = time_to_string( _finish_time );		}		public function pause():void		{			pause_time = getTimer();						removeEventListener( Event.ENTER_FRAME, update_timer );		}		public function unpause():void		{			start_time += ( getTimer() - pause_time );						addEventListener( Event.ENTER_FRAME, update_timer );		}		public function start_timer():void		{			pause_time = 0;						time_txt.text = String( Math.floor( _finish_time / 1000 ) )						start_time = getTimer() + _finish_time;			addEventListener( Event.ENTER_FRAME, update_timer );		}		public function stopTimer():void		{			removeEventListener( Event.ENTER_FRAME, update_timer );		}			public function get_timetaken():int		{			return time_taken;		}						private function update_timer(evt:Event):void		{			time_taken = ( start_time - getTimer() );			if( time_taken < 0 )			{				stopTimer();				time_txt.text = "00";				dispatchEvent( new Event( TIMESUP ) );			}			else			{							time_txt.text = time_to_string( time_taken );			}		}		private function time_to_string( time_to_convert:int ):String		{			var elapsed_hours:Number = Math.floor( time_to_convert / 3600000 );						var remaining:Number = time_to_convert - ( elapsed_hours * 3600000 );			var elapsed_minutes:Number = Math.floor( remaining / 60000 );			remaining = remaining - ( elapsed_minutes * 60000 );						var elapsed_seconds:Number = Math.floor( remaining / 1000 );			remaining = remaining - ( elapsed_seconds * 1000 );						var elapsed_fs:Number = Math.floor( remaining / 10 );						var hours:String = ( elapsed_hours < 10 )? "0" + elapsed_hours.toString() : hours = elapsed_hours.toString();						var minutes:String = ( elapsed_minutes < 10 )? "0" + elapsed_minutes.toString() : minutes = elapsed_minutes.toString();						var seconds:String = ( elapsed_seconds < 10 )? "0" + elapsed_seconds.toString() : seconds = elapsed_seconds.toString();			var hundredths:String = ( elapsed_fs < 10 )? "0" + elapsed_fs.toString() : elapsed_fs.toString();									//return hours + ":"  + minutes + ":" + seconds + ":" + hundredths;			return seconds;		}								public function clean_up():void		{			removeEventListener( Event.ENTER_FRAME, update_timer );		}	}}