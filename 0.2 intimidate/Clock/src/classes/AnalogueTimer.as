package classes{	import flash.utils.getTimer;	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.events.Event;		public class AnalogueTimer extends MovieClip	{					private var start_time:Number;		private var time_taken:int;						public function AnalogueTimer():void		{ 						start_timer();		}				public function start_timer():void		{			start_time = getTimer();						addEventListener( Event.ENTER_FRAME, update_timer );		}		public function stopTimer():void		{			removeEventListener( Event.ENTER_FRAME, update_timer );		}			public function get_timetaken():int		{			return time_taken;		}						private function update_timer(evt:Event):void		{			time_taken = ( getTimer() - start_time );						time_to_string( time_taken );		}		private function time_to_string( time_to_convert:int ):String		{			var elapsed_hours:Number = Math.floor( time_to_convert / 3600000 );						var remaining:Number = time_to_convert - ( elapsed_hours * 3600000 );			var elapsed_minutes:Number = Math.floor( remaining / 60000 );			remaining = remaining - ( elapsed_minutes * 60000 );						var elapsed_seconds:Number = Math.floor( remaining / 1000 );			remaining = remaining - ( elapsed_seconds * 1000 );						var elapsed_fs:Number = Math.floor( remaining / 10 );						var hours:String = ( elapsed_hours < 10 )? "0" + elapsed_hours.toString() : hours = elapsed_hours.toString();						var minutes:String = ( elapsed_minutes < 10 )? "0" + elapsed_minutes.toString() : minutes = elapsed_minutes.toString();						var seconds:String = ( elapsed_seconds < 10 )? "0" + elapsed_seconds.toString() : seconds = elapsed_seconds.toString();			var hundredths:String = ( elapsed_fs < 10 )? "0" + elapsed_fs.toString() : elapsed_fs.toString();									second_hand.rotation = ( 360 / 60 ) * Number( seconds );						return hours + ":"  + minutes + ":" + seconds + ":" + hundredths;		}	}}