package classes{	import flash.display.MovieClip;	import flash.events.Event;	import classes.MotionCam;	import com.coreyoneil.collision.CollisionList;	import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.display.BitmapData;	import flash.display.Bitmap;	import flash.utils.setInterval;	import flash.utils.clearInterval;	import flash.text.TextField;	import flash.media.Camera;	import flash.media.Video;	import flash.geom.Point;	import flash.geom.Rectangle;	import flash.media.SoundTransform;		import flash.utils.getTimer;		public class MainSingle extends MovieClip	{		private var motion_camera:MotionCam = new MotionCam();		private var _collisionList:CollisionList;		private var button_array:Array = [];				private var cymb_sound:Cymb = new Cymb();		private var snare_sound:Snare = new Snare();		private var kick_sound:Kick = new Kick();		private var tom_sound:Tom = new Tom();				private var cymb_length:int = 500;		private var snare_length:int = 500;		private var kick_length:int = 500;		private var tom_length:int = 500;				private var cymb_time:uint = 0;		private var snare_time:uint = 0;		private var kick_time:uint = 0;		private var tom_time:uint = 0;				private var last_played:String = "";						public function MainSingle()		{			var sound_transform:SoundTransform = new SoundTransform();			sound_transform.volume = 0;						cymb_sound.play( 0, 0, sound_transform );			snare_sound.play( 0, 0, sound_transform );			kick_sound.play( 0, 0, sound_transform );			tom_sound.play( 0, 0, sound_transform );						addChild( motion_camera );			//setChildIndex( motion_camera, 0 );			//setChildIndex( drum_kit, numChildren - 1 );								   			motion_camera.init();									motion_camera.addEventListener( MotionCam.CAMERA_READY, create_collisions );					}				public function create_collisions( ev:Event ):void		{			//addChild( motion_camera.video );						_collisionList = new CollisionList( motion_camera.output );			//_collisionList.alphaThreshold = .3;									_collisionList.addItem( buttonMC1 );			_collisionList.addItem( buttonMC2 );			_collisionList.addItem( buttonMC3 );			_collisionList.addItem( buttonMC4 );			_collisionList.addItem( buttonMC5 );			_collisionList.addItem( buttonMC6 );						addEventListener( Event.ENTER_FRAME, check_collision );		}						public function check_collision( ev:Event ):void		{			var collision:Array = _collisionList.checkCollisions();								if( collision.length > 0 )			{				for( var i:int = 0; i < collision.length; i++ )				{					var pixels:Array = collision[i].overlapping;					var percentage:Number = pixels.length / (collision[i].object1.width * collision[i].object1.height);										if( collision[i].object1.name == "buttonMC1" && percentage > .1)					{						if( cymb_time + cymb_length < getTimer() )						{							cymb_time = getTimer();							cymb_sound.play();													}						/*if( last_played != "buttonMC1" )						{							cymb_sound.play();							last_played = "buttonMC1";						}*/					}					if( collision[i].object1.name == "buttonMC2" && percentage > .5)					{						/*if( last_played != "buttonMC2" )						{							cymb_sound.play();							last_played = "buttonMC2";						}*/					}					if( collision[i].object1.name == "buttonMC3" && percentage > .5)					{						/**if( last_played != "buttonMC3" )						{							cymb_sound.play();							last_played = "buttonMC3";						}*/					}					if( collision[i].object1.name == "buttonMC4" && percentage > .5)					{						/*if( last_played != "buttonMC4" )						{							cymb_sound.play();							last_played = "buttonMC4";						}*/					}					if( collision[i].object1.name == "buttonMC5" && percentage > .5)					{						/*if( last_played != "buttonMC5" )						{							kick_sound.play();							last_played = "buttonMC6";						}*/					}					if( collision[i].object1.name == "buttonMC6" && percentage > .5)					{						/*if( last_played != "buttonMC5" )						{							kick_sound.play();							last_played = "buttonMC6";						}*/					}				}			}			else			{				buttonMC1.gotoAndStop(1)			}		}	}}