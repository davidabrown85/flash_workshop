package classes.physics{	import Box2D.Dynamics.Contacts.b2Contact;	import Box2D.Dynamics.b2ContactListener;		import Box2D.Dynamics.b2Body;		import Box2D.Dynamics.b2Fixture;	import Box2D.Dynamics.b2World;	import Box2D.Common.Math.b2Vec2;		import classes.physics.CallbackTypes;		import flash.utils.getTimer;	import classes.screens.ScreenGame;		public class ContactListener extends b2ContactListener	{		//private var sound_control:SoundControl = new SoundControl();		private var prev_time:uint = 0;		private var gameClass:ScreenGame;						public function ContactListener() { }								public function setup_listeners( gameClass:ScreenGame ):void //, sound_control:SoundControl ):void		{			this.gameClass = gameClass;			//sound_control = sound_control;		}								override public function BeginContact( contact:b2Contact ):void		{			var collision_type:uint = 0;			var collision_body:b2Fixture;						var current_time:uint = getTimer();						if( prev_time + 500 < current_time)			{				if( contact.GetFixtureA().GetBody().GetUserData() != null && contact.GetFixtureA().GetBody().GetUserData().type != CallbackTypes.PLAYER )				{					collision_body = contact.GetFixtureA();				}				else if( contact.GetFixtureB().GetBody().GetUserData() != null )				{					collision_body = contact.GetFixtureB();				}								if( collision_body )				{					trace("collision_body.GetBody().GetUserData().type: "+collision_body.GetBody().GetUserData().type);					switch( collision_body.GetBody().GetUserData().type  )					{						case CallbackTypes.COIN : 	collision_body.GetBody().GetUserData().status = "remove";													//gameClass.destroy_object( collision_body.GetBody() );													//gameClass.sound_control.play_sound( "doink_light_sfx" ); 													break;						case CallbackTypes.ENEMY : 	trace("Should game over");													gameClass.game_over();													//gameClass.sound_control.play_sound( "doink_light_sfx" );													break;						case CallbackTypes.GROUND : 													gameClass.player_landed();													//gameClass.sound_control.play_sound( "doink_sfx" ); 													break;						case CallbackTypes.GOAL :	trace("Should game over");													gameClass.game_over();													//gameClass.sound_control.play_sound( "doink_sfx" ); 													break;						default :					trace("defaulted");					}				}								prev_time = current_time			}				}	}}